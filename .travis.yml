# vim: nospell

language: cpp
dist: bionic

matrix:
  include:
    - os: linux
      name: GCC 7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-bionic-11
          packages:
            - catch2
            - cppcheck
            - doxygen
            - g++-7
            - clang-format-8
            - clang-tidy-8
            - iwyu
            - valgrind
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      name: GCC 8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-bionic-11
          packages:
            - catch2
            - cppcheck
            - doxygen
            - g++-8
            - clang-format-8
            - clang-tidy-8
            - iwyu
            - valgrind
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - os: linux
      name: Clang 7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
            - llvm-toolchain-bionic-11
          packages:
            - catch2
            - cppcheck
            - clang-7
            - clang-format-8
            - clang-tidy-8
            - doxygen
            - iwyu
            - libc++-7-dev
            - valgrind
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
    - os: linux
      name: Clang 8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-bionic-11
          packages:
            - catch2
            - cppcheck
            - clang-8
            - clang-format-8
            - clang-tidy-8
            - doxygen
            - iwyu
            - libc++-8-dev
            - valgrind
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

install:
  - eval "${MATRIX_EVAL}"
  - pip install --user ${USER} lizard
  - wget https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2-Linux-x86_64.sh
  - chmod 744 cmake-3.19.2-Linux-x86_64.sh
  - mkdir /home/travis/cmake
  - ./cmake-3.19.2-Linux-x86_64.sh --prefix=/home/travis/cmake --skip-license
  - rm cmake-3.19.2-Linux-x86_64.sh
  - ln -s /home/travis/cmake/bin/cmake /home/travis/bin/cmake
  - ln -s /home/travis/cmake/bin/ctest /home/travis/bin/ctest
  - ln -s /home/travis/cmake/bin/cpack /home/travis/bin/cpack

  # Set up a build directory, because in-source builds are not allowed.
  - source_directory="${TRAVIS_BUILD_DIR}"
  - build_directory="${TRAVIS_BUILD_DIR}/../build"
  - mkdir "${build_directory}"

before_script:
  - shopt -s globstar

script:
  # TODO Export compile commands and add it to the cppcheck command
  - cd "${source_directory}"
  - cppcheck
    --quiet
    --enable=warning
    --enable=style
    --enable=information
    --error-exitcode=2
    -j $(nproc)
    .

  # Ensure that there are no formatting issues.
  # - clang-format -i -style=file **/*.{h,cpp}
  # - test -z "$(git status --porcelain)"

  # release build & test
  - cd "${build_directory}"
    && cmake -Wdeprecated -D CMAKE_BUILD_TYPE=Release "${source_directory}"
    && cmake --build . -- -j$(nproc)
    && ctest --output-on-failure

  # debug build & test with address sanitizer
  - rm -r *
    && cmake
      -Wdeprecated
      -D CMAKE_BUILD_TYPE=Debug
      -D fits_enable_asan:BOOL=on
      "${source_directory}"
    && cmake --build . -- -j$(nproc)
    && ctest --output-on-failure --label-regex unit

  # debug build & test with Valgrind
  # - rm -r *
  #   && cmake
  #     -Wdeprecated
  #     -D CMAKE_BUILD_TYPE=Debug
  #     -D fits_enable_asan:BOOL=off
  #     "${source_directory}"
  #   && cmake --build . -- -j$(nproc)
  #   && ctest 
  #     --output-on-failure
  #     --label-regex unit
  #     --dashboard ExperimentalMemCheck
  #   && find Testing/Temporary -size 0 -exec rm {} \;
  #   && find Testing/Temporary -name 'MemoryChecker.*.log' -exec cat {} \;
